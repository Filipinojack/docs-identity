---
title: Administering Pivotal Single Sign-On
owner: Identity
---

## <a id='plan-management'></a>Manage Service Plans

Pivotal Single Sign-On is a multi-tenant service. A Pivotal Single Sign-On tenant corresponds to a service plan. As an enterprise adopting Pivotal Single Sign-On, you might want to segregate your tenants into separate plans. For example, the following tenants might require separate plans:

  * Business units and geographical locations
  * Employees, consumers, and partners
  * Development, staging, and production instances

You can create new Single Sign-On Service Plans at any time from the SSO dashboard by logging in with your administrator credentials to `p-identity.YOUR-SYSTEM-DOMAIN`.

## <a id='instance-management'></a>Manage Service Instances

Service instances are created based on the service plan and are visible within the confines of a space.

To create a new service instance:

  1. Log in to your Apps Manager instance at `https://console.YOUR-SYSTEM-DOMAIN` as a Space Developer.
  1. Navigate to the Marketplace and select **Pivotal Single Sign-On**.
  1. Select your service plan.
  1. Enter an **Instance Name**.
  1. Choose a space for the instance from the **Add to Space** dropdown menu. The default is 'development'.
  1. Choose an application to bind the service instance to from the **Bind to App** dropdown menu. This option defaults to [do not bind].

## <a id='user-store-management'></a>Manage User Stores

Follow the steps below to configure an External Identity Provider based on SAML 2.0:

  1. Navigate to the Plan Administration User Interface at `https://p-identity.YOUR-SYSTEM-DOMAIN`.
  1. Log in with your administrator credentials.
  1. Navigate to the Service Plan and select **Manage User Stores** from the menu.
  1. Click **Service Provider Metadata** to download the SAML Service Provider metadata for the selected Service Plan.
  1. Import the Service Provider Metadata on the Identity Provider console.
  1. Configure the Identity Provider. These steps vary based on the Identity Provider being configured.
    1. Create the Remote Service Provider Entity Object. This can be done by importing the Service Provider Metadata from Step 4.
    1. Set the NameID format as email address and map the value as the user's email address.
		<p class='note'><strong>Note</strong>: Pivotal Single Sign-On service only supports email as the NameID.</p>
    1. Set the SAML SSO Binding Profile as `HTTP POST`.
    1. Only SP-Initiated SSO Transactions are allowed. Configure the same on the provider.
    1. Download the Identity Provider Metadata. If the Identity Provider exposes a URL for downloading the Metadata, the same can be used.
  1. Click **New User Store**.
  1. Enter a User Store Name. This is visible on the application login page if more than one Identity Provider is associated with an application.
  1. Supply the SAML Identity Provider metadata in one of the following ways:
  	1. Provide the metadata URL and click Fetch Metadata.
  	1. Click Upload Identity Provider Metadata to upload the XML metadata of your identity provider.

After you complete the steps above, the Entity ID, SSO URL, and NameID of your new user store are visible. In order to add users to the Internal User Store for a given Service Plan, follow the steps outlined in [Adding Users to a Single Sign-On Service Plan](adding-users.html).


## <a id='app-managemnet'></a>Manage Applications

### Binding Applications running on Pivotal Cloud Foundry

  1. Log in as a user with the role of a Space Developer.
  1. Set the GRANT\_TYPE Environment Variable for the Application depending on the Application Type. Refer to [Choosing an Application Type for Pivotal Single Sign-On](http://docs.pivotal.io/p-identity/app-type.html).
  <table>
    <tr>
      <td>Application Type</td>
      <td>Grant Type Env Value</td>
    </tr>
    <tr>
      <td>Web App</td>
      <td>authorization\_code</td>
    </tr>
    <tr>
      <td>Native Mobile App</td>
      <td>password</td>
   </tr>
   <tr>
  	  <td>Single Page JavaScript App</td>
      <td>client_credentials</td>
    </tr>
    <tr>
	  <td>Service-to-Service App</td>
      <td>implicit</td>
    </tr>
    </table>

  1. Bind the Application with the Service Instance.
  1. Binding the Application creates an OAuth Client based on the Grant Type set.
  1. Click the **Manage** link under the Pivotal Single Sign-On service instance to launch the service dashboard.
  1. Navigate to your Application.
  1. Under User Store Connections, Internal User Store is selected by default. Switch it to use an External Identity provider for SSO and save the configuration.
  1. Refer to the [Application Integration](#app-integration) section on how to enable Single Sign-On on the application side.

###Registering External Applications (Applications not hosted on Pivotal Cloud Foundry)

  1. Click the **Manage** link under the Pivotal Single Sign-On service instance to launch the service dashboard.
  1. Click **New App**.
  1. Enter an **App Name**.
  1. Select an **Application Type**. Refer to [Choosing an Application Type for Pivotal Single Sign-On](app-type.html) to determine the application type you should choose.
  1. User Store Connections defaults to `Internal User Store`, but you can choose to use one or more SAML User Store Connections. This option governs the users who are allowed to authenticate to the application.
	<p class='note'><strong>Note</strong>: This option is available for all application types except the Service-to-Service App.</p>
  1. If your Application Type is 'Web App', enter a whitelist of valid Auth Redirect URIs beneath Redirect URIs. The redirect query parameter specified on the OAuth request must match the URIs specified in this list. Otherwise, the Pivotal Single Sign-On service rejects the request.
  1. Enter the **Scopes** that this application can request. This field defaults to `openid`. Scopes are permissions that the application requests on the user's behalf. If this application is purely for authentication purposes, then the 'openid' scope is sufficient. If the application makes API calls on behalf of the end user, you must specify both the scopes enforced by the API and the scopes to be requested by the application.
  1. Select scopes pertaining to company owned and managed applications as **Auto-Approved Scopes**. All defined scopes in the **Scopes** field are available for selection as Auto-Approved Scopes. Scopes selected as Auto-Approved do not require explicit authorization from the end user. To determine whether a scope should be 'Auto-Approved', decide whether the application you are binding is trusted. Company owned and managed applications fall under this category. Scopes that pertain to permission or actions on resources from applications external to PCF are not candidates for auto-approval.
  1. After you click **Create App**, the **Next Steps** view displays. These steps describe the important endpoints required for application integration. Refer to the [Application Integration](#app-integration) section for more details.


## <a id='app-integration'></a>Application Integration

The Pivotal Single Sign-On service is based on the OAuth protocol. Ensure that the applications you intend to secure with Pivotal Single Sign-On are OAuth aware.

Java-based sample applications, created using [Spring Boot](https://projects.spring.io/spring-boot/), are available for all four application types. You can find information about configuring and running these sample applications [here](https://github.com/pivotal-cf/identity-sample-apps). These applications use the SSO Service Connector, which auto configures the application for OAuth. The only step involved after binding the application with the SSO Service is to restart the application for the new SSO configuration to take effect.

For non-Java applications, the applications need to be made OAuth aware. The following information needs to be supplied to the application after the SSO service bind.

<p class='note'><strong>Note</strong>: All the information above is available on the Next Steps page.</p>

* App ID, also known as OAuth Client ID
* App Secret, also known as OAuth Client Secret
* OAuth Authorization URL: This is the endpoint for Client Authorization
* OAuth Token URL: This is the end point for token retrieval

  <p class="note"><strong>Note</strong>: The **Application ID** and **Application Secret** are both available on the Next Steps page of the Pivotal Single Sign-On service dashboard.</p>

Validation of the token requires that you verify the following:

  1. The token is a properly signed JSON Web Token with an appropriate Public Key. The key can be downloaded from the Token Verification Key end point specified on the Next Steps Page.

  1. The value of <code>aud</code> in the token matches your Application ID.
  1. The value of <code>iss</code> matches `https://AUTH-DOMAIN.uaa.YOUR-SYSTEM-DOMAIN/oauth/token`.
  1. The expiry time (<code>exp</code>) of the token has not passed.

